version: '3.8'

services:
  db:
    image: postgres:14
    container_name: local-postgres
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - '5432:5432'
    volumes:
      - db-data:/var/lib/postgresql/data
    restart: on-failure

  prisma-studio:
    container_name: local-prisma-studio
    image: node:18-alpine
    working_dir: /app
    volumes:
      - .:/app
    environment:
      DATABASE_URL: 'postgresql://postgres:postgres@db:5432/mydb'
    depends_on:
      - db
    ports:
      - '5555:5555'
    command: npx prisma studio
    restart: on-failure

  minio:
    image: minio/minio
    container_name: local-minio
    command: server /data --console-address :9001
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    ports:
      - '9000:9000' # S3-compatible endpoint
      - '9001:9001' # MinIO console UI, need to create a bucket first here
    volumes:
      - minio-data:/data
    restart: on-failure

  front:
    container_name: local-front
    build:
      context: .
      dockerfile: Dockerfile.local
    volumes:
      - .:/app
    ports:
      - '3000:3000'
    environment:
      DATABASE_URL: 'postgresql://postgres:postgres@db:5432/mydb'
      S3_ENDPOINT: 'http://minio:9000'
      S3_ROOT_USER: 'minio'
      S3_ROOT_PASSWORD: 'minio123'
      S3_BUCKET: 'my-bucket'
    depends_on:
      - db
      - minio
    restart: on-failure

volumes:
  db-data:
  minio-data:
